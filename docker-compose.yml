
version: '3.8'

services:
  # Qdrant vector database for semantic search and embeddings
  qdrant-db:
    image: qdrant/qdrant:latest
    container_name: qdrant-db
    ports:
      - "6333:6333"  # Main API port
      - "6334:6334"  # gRPC port
    volumes:
      - ./qdrant_data:/qdrant/storage

  # Neo4j graph database for knowledge graph storage
  neo4j-db:
    image: neo4j:5.20.0
    container_name: neo4j-db
    ports:
      - "7474:7474"  # HTTP interface
      - "7687:7687"  # Bolt protocol
    environment:
      - NEO4J_AUTH=neo4j/demodemo
    volumes:
      - ./neo4j_data:/data

  # Graphiti MCP Server - Knowledge graph management and temporal reasoning
  # Provides tools for building and querying temporally-aware knowledge graphs
  graphiti-mcp:
    image: zepai/knowledge-graph-mcp:latest
    container_name: krag-graphiti-mcp
    ports:
      - "8000:8000"  # MCP SSE transport port
    env_file:
      - .env  # Contains OPENAI_API_KEY and other configuration
    environment:
      - NEO4J_URI=bolt://neo4j-db:7687  # Connect to local Neo4j instance
    depends_on:
      - neo4j-db
    command: ["uv", "run", "graphiti_mcp_server.py", "--transport", "sse"]

  # Qdrant MCP Server - Vector search and semantic memory
  # Provides tools for storing and retrieving information using semantic search
  qdrant-mcp:
    build: ./mcp-server-qdrant
    container_name: krag-qdrant-mcp
    ports:
      - "8001:8001"  # MCP SSE transport port (host:container)
    environment:
      - QDRANT_URL=http://qdrant-db:6333  # Connect to local Qdrant instance
      - FASTMCP_HOST=0.0.0.0  # Bind to all interfaces for external access
      - FASTMCP_PORT=8001  # Use port 8001 inside container for clarity
    depends_on:
      - qdrant-db

volumes:
  qdrant_data:
  neo4j_data:
